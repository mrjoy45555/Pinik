module.exports = {
  config: {
    name: "out",
    version: "1.0",
    author: "Joy Ahmed",
    role: 2, // рж╢рзБржзрзБ admin ржЗржЙржЬрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ
    shortDescription: "ржмржЯржХрзЗ ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржмрзЗрж░ ржХрж░рзЗ ржжрзЗрзЯ",
    longDescription: "ржмржЯржХрзЗ ржЪрж▓ржорж╛ржи ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржмрзЗрж░ ржХрж░рзЗ ржжрзЗрзЯ",
    category: "group",
    usages: ".out",   // ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ ржкржЫржирзНржжрзЗрж░ prefix рж╕рзЗржЯ ржХрж░рзЛ
    cooldowns: 5,
    prefix: ".",     // <-- ржПржЗ рж▓рж╛ржЗржи ржжрж┐рзЯрзЗ prefix рж╕рзЗржЯ ржХрж░рзЛ
  },

  onStart: async function ({ api, event }) {
    const { threadID, messageID, isGroup } = event;

    if (!isGroup) {
      return api.sendMessage("тЭМ ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржЧрзНрж░рзБржк ржЪрзНржпрж╛ржЯрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗ!", threadID, messageID);
    }

    try {
      await api.sendMessage("ЁЯСЛ ржмрж╛ржЗ! ржмржЯ ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯрзЗ ржпрж╛ржЪрзНржЫрзЗ...", threadID, messageID);
      if (typeof api.removeUserFromGroup === "function") {
        return api.removeUserFromGroup(api.getCurrentUserID(), threadID);
      } else if (typeof api.leaveGroup === "function") {
        return api.leaveGroup(threadID);
      } else {
        return api.sendMessage("тЭМ ржмржЯрзЗрж░ API рждрзЗ ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржмрзЗрж░ рж╣ржУрзЯрж╛рж░ ржлрж╛ржВрж╢ржи ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред", threadID, messageID);
      }
    } catch (error) {
      return api.sendMessage("тЭМ ржмржЯ ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржмрзЗрж░ рж╣рждрзЗ ржкрж╛рж░рзЗржирж┐:\n" + error.message, threadID, messageID);
    }
  }
};
